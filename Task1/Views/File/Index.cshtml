@model IEnumerable<Task1.Models.File>

@{
    ViewBag.Title = "Index";
}

@{ var taskId = Request.QueryString["taskId"];
    var storyId = Request.QueryString["storyId"]; }

@Styles.Render("~/Content/datatable")
@Scripts.Render("~/bundles/font-awesome")
@Scripts.Render("~/bundles/datatable")

@using System.Text.RegularExpressions;

@helper StripHTML(string input)
{
    if (!string.IsNullOrEmpty(input))
    {
        input = Regex.Replace(input, "<.*?>", String.Empty);
        <span>@input</span>
    }
}


<div class="panel panel-primary" style="margin-top:3vh">
    <div class="panel-heading">
        <div class="panel-title">
            <h2>Files</h2>
        </div>
    </div>
    <div class="panel-body well" style="margin-bottom: 0">
        <table class="display" id="dtable">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FileType)
                    </th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @StripHTML(item.Name)
                        </td>
                        <td>
                            @StripHTML(item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FileType)
                        </td>
                        <td>
                            @Html.ActionLink(" ", "Edit", "File", new { id = item.Id, storyId = storyId, taskId = item.TaskId }, htmlAttributes: new { @class = "btn btn-sm btn-warning fa fa-pencil fa-lg" })
                            @Html.ActionLink(" ", "Details", new { id = item.Id, storyId = storyId, taskId = item.TaskId }, htmlAttributes: new { @class = "btn btn-sm btn-success fa fa-info-circle fa-lg" })
                            @Html.ActionLink(" ", "Delete", new { id = item.Id, storyId = storyId, taskId = item.TaskId }, htmlAttributes: new { @class = "btn btn-sm btn-danger fa fa-trash-o fa-lg" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to Tasks", "Index", "Task", new { id = storyId }, null)
    </div>

    <script>
    var nextLocation = '/File/Create?storyId=@storyId&taskId=@taskId';
    </script>
    <script src="~/Scripts/datatable-button-tooltip.js"></script>
