@model Task1.Models.Task

@{
    ViewBag.Title = "Create";
}

@Scripts.Render("~/bundles/ckeditor")

@{ var storyId = Request.QueryString["storyId"];}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.StoryId, new { htmlAttributes = new { @class = "form-control", Value = storyId } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.why, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.why, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.why, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.what, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.what, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.what, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.how, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.how, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.how, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.eta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.eta, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.eta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = storyId })
</div>


<script>
    ClassicEditor
        .create(document.querySelector('#name'))
        .catch(error => {
            console.error(error);
        });

    ClassicEditor
        .create(document.querySelector('#why'))
        .catch(error => {
            console.error(error);
        });

    ClassicEditor
        .create(document.querySelector('#what'))
        .catch(error => {
            console.error(error);
        });

    ClassicEditor
        .create(document.querySelector('#how'))
        .catch(error => {
            console.error(error);
        });

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
